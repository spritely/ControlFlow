// --------------------------------------------------------------------------------------------------------------------
// <copyright file="TryConfiguration.cs">
//   Copyright (c) 2016. All rights reserved.
//   Licensed under the MIT license. See LICENSE file in the project root for full license information.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in Spritely.Redo source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Spritely.Redo.Internal
{
    using System;
    using System.Linq;

#if !SpritelyRecipesProject
    [System.Diagnostics.DebuggerStepThrough]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCode("Spritely.Recipes", "See package version number")]
#pragma warning disable 0436
#endif
    internal class TryConfiguration
    {
        public IRetryStrategy RetryStrategy { get; set; }
        public ExceptionListener ExceptionListeners { get; set; }
        public ExceptionCollection Handles { get; set; }

        public void Report(Exception ex)
        {
            ExceptionListeners(ex);
        }

        public static TryConfiguration Create()
        {
            TryConfiguration configuration;
            lock (TryDefault._Lock)
            {
                configuration = new TryConfiguration
                {
                    ExceptionListeners = TryDefault.ExceptionListeners,
                    Handles = new ExceptionCollection(),
                    RetryStrategy = TryDefault.RetryStrategy
                };

                TryDefault._handles.ToList().ForEach(h => configuration.Handles.Add(h));
            }

            return configuration;
        }
    }
#if !SpritelyRecipesProject
#pragma warning restore 0436
#endif
}
